UI-Only
-------

- Make acl edit view not look weird at smaller resolutions.

- Allow folder contents UI ("Contents" tab) sorting by name and by type.

UI-Plus-Guts
------------

- Create "addable here" API that manages the __addable__ attribute of a
  folderish object.

- Create object map management UI (view relationships, view paths, view
  objectids).

- Improve catalog management UI.  We currently allow someone to reindex the
  entire catalog via the "Manage" tab of a catalog.  Instead, we should allow
  them to reindex individual persistent indices or all persistent indices.

- Allow cut, copy, paste, rename, (import/export?) from contents view.

- Add Undo tab to Site (or per folder?) which will allow admins to undo recent
  transactions.  Implied: add transaction notes to all transactions.

- Stamp created objects with creator information?

- Stamp created objects with created date info?

- Allow services to be added to services folder via add view UIs.

- Allow reordering of resources in folder contents view when the folder is
  ordered.

Guts-Only
---------

- Figure out how to let people override generic add view.

- Create a scaffold.

- Define path index CQE syntax (currently path indexes can only be queried
  using query instance syntax).

- Substance D ACLs contain object identifiers which refer to principals.
  Currently, when a principal is deleted, ACLs which refer to the principal
  are not adjusted.  This is both a security issue and a sanity issue.  The
  object id of a deleted principal is put back into the set of object ids
  that are grantable to future objects.  As a result, some other principal
  may wind up with an object id that used to belong to a deleted principal,
  and he may inappropriately be granted access due to stale ACLs that
  possesses that object id.  Or some other object that is not a principal
  might wind up with that object id, and undefined things will happen.

  Here's what would be nice: when an ACL is changed or added, using the
  object map, form relationships between the principal objects it names and
  the ACL-bearing object.  When a principal is deleted, change the ACL of all
  such-related objects so that the deleted principal id in the ACL is
  replaced by an unobtainable object id.

  Note that a variant of this bug/feature has existed in Zope for 13 years,
  and it hasn't seemed to have raised much ire, but it always bugged me.

- Decide whether to split "manage contents" permissions out for folders into
  add, delete, rename.

- ACL edit view currently retatalogs an object based on the presence or
  absence of an "allowed" index.  This is wrong.

- Emit an ObjectMoving event rather than removed event with a moving flag,
  then an add event?

- Use family64 for objectmap and catalog BTrees/Sets.

- Get rid of ISite?  Use presence of __services__ to denote site?

- Add a change_acl API that sends an event when an ACL is changed.

- Undo of catalog reindex doesnt?

- Refactor ACL view.

Nice-to-Have Features
---------------------

- XML-RPC.

- Workflow.

- Drag and drop ACE reordering in ACL edit view.

- Ability to add and edit principals in existing ACEs in ACL edit view.

